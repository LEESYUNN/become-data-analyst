quit()
1+2
mtcars$wt
cond <- mtcars$wt < 3
cond
mtcars$weight_class <- ifelse(cond, 'light', 'average')
mtcars$weight_class
cond <- mtcars$wt > 3.5
mtcars$weight_class <- ifelse(cond, 'heavy', mtcars$weight_class)
mtcars$weight_class
summary(mtcars)
efficient = mtcars[mtcars$mpg>=23.0,]
dim(efficient)
subset(mtcars, mpg > 30 & hp > 100)
subset(mtcars, mpg < 14 | disp > 390)
subset(mtcars, qsec <= 16.90)
lightCars <- mtcars[mtcars$wt < 2.0,]
length(lightCars)
lightCars
mtcars$year <- 1974
mtcars <- subset(mtcars, select = -year)
mtcars$year <- c(1973, 1974)
mtcars <- subset(mtcars, select = -year)
rm(cond)
rm(efficient)
install.packages('knitr', dependencies = T)
install.packages('knitr', dependencies = T)
getOption('repos')
?chooseBioCmirror
R.home(component = "home")
?options(repos =)
R.home()
swirl()
library(swirl)
swirl()
qplot(displ, hwy, data=mpg, geom=c("point", "smooth"), facets=.~drv)
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(. ~ drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(. ~ drv) + ggtitle("Swirl Rules!")
g + geom_point(color="pink", size=4, alpha=1/2)
g + geom_point(size=4, alpha=1/2, aes(color=drv))
g + geom_point(color=drv) + labs(title="Swirl Rules!", labs(x="Displacement", y="Hwy Mileage")
g + geom_point(color=drv) + labs(title="Swirl Rules!")+ labs(x="Displacement", y="Hwy Mileage")
g + geom_point(color=drv) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color=drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color=drv), size=2, alpha=1/2) + geom_smooth(size=4, linetype=3, method="lm", se=FALSE)
g + geom_point(aes(color=drv)) + theme_bw(base_family="Times")
plot(myx, myy, type="l", ylim=c(-3,3))
g <- ggplot(testdat, aes(x=myx, y=myy))
g + geom_line()
g + geom_line() + ylim(-3, 3)
g + geom_line() + coord_cartesian(ylim=c(-3, 3))
g <- ggplot(mpg, aes(x=displ, y=hwy, color=factor(year))
)
g
g + geom_point()
g + geom_point() + facet_grid(drv~cyl, margins=TRUE)
g + geom_point() + facet_grid(drv~cyl, margins=TRUE) + geom_smooth(method="lm", se=FALSE, size=2, color="black")
g + geom_point() + facet_grid(drv~cyl, margins=TRUE) + geom_smooth(method="lm", se=FALSE, size=2, color="black") + labs(x="Displacement", y="Highway Mileage", title="Swirl Rules!")
quit()
data(Salaries, package = "car")
library(ggplot2)
ggplot(data=Salaries, aes(x=rank, y=salary, fill=sex)) + geom_boxplot() +
scale_x_discrete(breaks=c("AsstProf", "AssocProf", "Prof"), labels=c("Assistant\nProfessor", "Associate\nProfessor", "Full\nProfessor")) + scale_y_continuous(breaks = c(50000, 100000, 150000, 200000), labels = c("$50k", "$100k", "$150k", "$200k")) + labs(title="Faculty Salary by Rank and Sex", x="", y="")
scale_x_discrete(breaks=c("AsstProf", "AssocProf", "Prof"), labels=c("Assistant\nProfessor", "Associate\nProfessor", "Full\nProfessor")) + scale_y_continuous(breaks = c(50000, 100000, 150000, 200000), labels = c("$50k", "$100k", "$150k", "$200k")) + labs(title="Faculty Salary by Rank and Sex", x="", y="") + theme(legend.position = c(.1, .8))
scale_x_discrete(breaks=c("AsstProf", "AssocProf", "Prof"), labels=c("Assistant\nProfessor", "Associate\nProfessor", "Full\nProfessor")) + scale_y_continuous(breaks = c(50000, 100000, 150000, 200000), labels = c("$50k", "$100k", "$150k", "$200k")) + labs(title="Faculty Salary by Rank and Sex", x="", y="")
ggplot(data=Salaries, aes(x=rank, y=salary, fill=sex)) + geom_boxplot() +
scale_x_discrete(breaks=c("AsstProf", "AssocProf", "Prof"), labels=c("Assistant\nProfessor", "Associate\nProfessor", "Full\nProfessor")) + scale_y_continuous(breaks = c(50000, 100000, 150000, 200000), labels = c("$50k", "$100k", "$150k", "$200k")) + labs(title="Faculty Salary by Rank and Sex", x="", y="") + theme(legend.position = c(.1, .8))
ggplot(mtcars, aes(x=wt, y=mpg, size=disp)) + geom_point(shape=21, color="black", fill="cornsilk") + labs(x="Weight", y="Miles Per Gallon", title="Bubble Chart", size="Engine\nDisplacement")
ggplot(mtcars, aes(x=wt, y=mpg, size=disp, color=disp)) + geom_point(shape=21, color="black", fill="cornsilk") + labs(x="Weight", y="Miles Per Gallon", title="Bubble Chart", size="Engine\nDisplacement")
ggplot(mtcars, aes(x=wt, y=mpg, size=disp, fill=disp)) + geom_point(shape=21) + labs(x="Weight", y="Miles Per Gallon", title="Bubble Chart", size="Engine\nDisplacement")
?mtcars
ggplot(mtcars, aes(x=wt, y=mpg, size=disp, fill=am)) + geom_point(shape=21) + labs(x="Weight", y="Miles Per Gallon", title="Bubble Chart", size="Engine\nDisplacement")
p1 <- ggplot(data=Salaries, aes(x=rank)) + geom_bar()
p2 <- ggplot(data=Salaries, aes(x=sex)) + geom_bar()
p3 <- ggplot(data=Salaries, aes(x=yrs.since.phd, y=salary)) + geom_point()
library(gridExtra)
grid.arrange(p1, p2, p3, ncol=3)
summary(diamonds)
ggplot(data = diamonds, aes(x=price)) + geom_histogram(binwidth = 300)
ggplot(diamonds, aes(x=price)) + geom_histogram(binwidth = 300) + scale_x_continuous(limits = c(0, 5000))
ggplot(diamonds, aes(x=price)) + geom_histogram(binwidth = 30) + scale_x_continuous(limits = c(0, 5000))
ggplot(diamonds, aes(x=price)) + geom_histogram(binwidth = 30) + scale_x_continuous(limits = c(0, 2000))
ggsave('priceHistogram.png')
getwd()
ggplot(diamonds, aes(x=price)) + geom_histogram(binwidth = 30) + scale_x_continuous(limit
)
ggplot(diamonds, aes(x=price)) + geom_histogram(binwidth = 200) + facet_grid(.~cut)
qplot(x = price, data = diamonds) + facet_wrap(~cut, scales = "free_y")
ggplot(diamonds, aes(x=price)) + geom_histogram(binwidth = 200) + facet_grid(.~cut)
ggplot(diamonds, aes(x=price)) + geom_histogram(binwidth = 200) + facet_grid(.~cut, scales = "free_y")
ggplot(diamonds, aes(x=price)) + geom_histogram(binwidth = 200) + facet_wrap(~cut, scales = "free_y")
ggplot(diamonds, aes(x=price/carat)) + geom_histogram() + facet_wrap(~cut, scales = "free_y") + scale_x_log10()
str(diamonds)
ggplot(diamonds, aes=(x=cut, y=price)) + geom_boxplot()
ggplot(diamonds, aes(x=cut, y=price)) + geom_boxplot()
ggsave("priceByCut.png")
by(diamonds$price, diamonds$cut, summary)
ggplot(diamonds, aes(x=clarity, y=price)) + geom_boxplot()
ggsave("priceByClarity.png")
ggplot(diamonds, aes(x=color, y=price)) + geom_boxplot()
ggsave('priceByColor.png')
ggplot(diamonds, aes(x=color, y=price/carat)) + geom_boxplot()
ggsave('pricePerCaratByColor.png')
gdps <- read.table("indicator pwt gdp_pc_past_10yr_growth.csv", header=TRUE, sep = ",")
gdps <- read.table("indicator pwt gdp_pc_past_10yr_growth.csv", header=TRUE, sep = ",")
gdps <- read.csv('indicator pwt gdp_pc_past_10yr_growth.csv', header = T, row.names = 1, check.names = F)
head(gdps)
head(gdps)
str(gdps)
str(gdps)
ggplot(gdps, aes(x=1962)) + geom_histogram()
View(gdps)
View(gdps)
chinaSeries <- ts(gdps["China"], start = 1962, end = 2004, frequency = 1)
chinaSeries <- ts(gdps$China, start = 1962, end = 2004, frequency = 1)
chinaSeries <- ts(gdps, start = 1962, end = 2004, frequency = 1)
chinaSeries
gdps$China
gdps$1960
gdps$`1962`
ggplot(gdps, aes(x=2004)) + geom_histogram()
?t
t(gdps)
gdps_tran <- t(gdps)
View(gdps_tran)
str(gdps_tran)
gdps_tran$China
gdps_tran$"China"
gdps_tran["China"]
gdps_tran[China]
summary(gdps_tran)
gdps_tran <- t(gdps)
str(summary(gdps_tran))
str(gdps_tran)
gdps_tran[["China"]]
?gdps_tran
??gdps_tran
View(mtcars)
View(mtcars)
str(mtcars)
str(gdps_tran)
?read.csv
gdps <- read.csv('indicator pwt gdp_pc_past_10yr_growth.csv', header = T, row.names = 1, check.names = F, stringsAsFactors = F)
gdps
str(gdps)
gdps$`1960`
View(gdps)
View(gdps)
gdps_tran <- t(gdps)
View(gdps_tran)
View(gdps_tran)
str(gdps_tran)
cuberoot_trans = function() trans_new('cuberoot', transform = function(x) x^(1/3),
inverse = function(x) x^3)
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
library(ggplot2)
data(diamonds)
p1 <- ggplot(data=diamonds, aes(x=carat, y=price))
p1 + geom_point(fill=I('#F79420'), color=I('black'), shape=21) +
xlim(0, quantile(diamonds$carat, prob = .99)) +
ylim(0, quantile(diamonds$price, prob = .99))
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
cuberoot_trans = function() trans_new('cuberoot', transform = function(x) x^(1/3),
inverse = function(x) x^3)
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
?trans_new
library(scales)
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
library(ggplot2)
flighttxt <- '
miles price
337 59.5
2565 509.5
967 124.5
5124 1480.4
2398 696.23
2586 559.5
7412 1481.5
522 474.5
1499 737.5
'
flight <- read.table(header=T, text=flighttxt)
ggplot(data=flight, aes(x=miles, y=price)) + geom_point()
cor.test(flight$miles, flight$price)
(500-160.13)/0.2
lm(flight$price, flight$miles)
lm(formula = flight$price ~ flight$miles)
2.763-0.149 * 5 + 0.093 * 7
stemtxt <- '
stems	activity
116	60
117	67
120	64
1	8
52 13
79 63
109	63
27 2
85 46
51 27
78 43
55 24
26 10
39 28
107 56
'
stemcells <- read.table(head=T, text=stemtxt)
cor.test(stemcells$stem, stemcells$activity)
0.934465 * sd(stemcells$activity)/sd(stemcells$stems)
0.934465 * 0.934465
summary(stemcells)
38.27 - 0.5722512 * 70.8
lm(formula = stemcells$activity~stemcells$stems)
72.25/0.57
2.25/0.57
install.packages("ggplot2", dependencies = T)
install.packages("knitr", dependencies = T)
install.packages("dplyr", dependencies = T)
setwd('/home/leesper/become-data-analyst/P4_Explore_Summarize_Data')
View(diamonds)
View(gdps_tran)
# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=FALSE for all code chunks in your file.
library(ggplot2)
# Load the Data
prosperData <- read.csv('prosperLoanData.csv')
View(prosperData)
str(prosperData)
View(prosperData)
# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=FALSE for all code chunks in your file.
library(ggplot2)
library(dplyr)
tbl_df(prosperData)
table(prosperData$EmploymentStatus)
# Load the Data
prosperData <- read.csv('prosperLoanData.csv', na.strings = c('', 'NA'))
table(prosperData$EmploymentStatus)
